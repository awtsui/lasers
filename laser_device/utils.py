import math

feature_to_effect = {
    0: 2.00,
    20: 1.91,
    40: 1.83,
    60: 1.75,
    80: 1.67,
    100: 1.59,
    120: 1.52,
    140: 1.45,
    160: 1.38,
    180: 1.32,
    200: 1.25,
    220: 1.19,
    240: 1.14,
    260: 1.08,
    280: 1.02,
    300: 0.97,
    320: 0.92,
    340: 0.87,
    360: 0.83,
    380: 0.78,
    400: 0.74,
    420: 0.69,
    440: 0.65,
    460: 0.61,
    480: 0.57,
    500: 0.54,
    520: 0.50,
    540: 0.46,
    560: 0.43,
    580: 0.40,
    600: 0.37,
    620: 0.33,
    640: 0.30,
    660: 0.28,
    680: 0.25,
    700: 0.22,
    720: 0.19,
    740: 0.17,
    760: 0.14,
    780: 0.12,
    800: 0.09,
    820: 0.07,
    840: 0.05,
    860: 0.03,
    880: 0.00,
    900: -0.02,
    920: -0.04,
    940: -0.06,
    960: -0.07,
    980: -0.09,
    1000: -0.11,
    1020: -0.13,
    1040: -0.15,
    1060: -0.16,
    1080: -0.18,
    1100: -0.19,
    1120: -0.21,
    1140: -0.22,
    1160: -0.24,
    1180: -0.25,
    1200: -0.27,
    1220: -0.28,
    1240: -0.29,
    1260: -0.31,
    1280: -0.32,
    1300: -0.33,
    1320: -0.34,
    1340: -0.36,
    1360: -0.37,
    1380: -0.38,
    1400: -0.39,
    1420: -0.40,
    1440: -0.41,
    1460: -0.42,
    1480: -0.43,
    1500: -0.44,
    1520: -0.45,
    1540: -0.46,
    1560: -0.47,
    1580: -0.48,
    1600: -0.49,
    1620: -0.49,
    1640: -0.50,
    1660: -0.51,
    1680: -0.52,
    1700: -0.53,
    1720: -0.53,
    1740: -0.54,
    1760: -0.55,
    1780: -0.56,
    1800: -0.56,
    1820: -0.57,
    1840: -0.58,
    1860: -0.58,
    1880: -0.59,
    1900: -0.60,
    1920: -0.60,
    1940: -0.61,
    1960: -0.61,
    1980: -0.62,
    2000: -0.62,
    2020: -0.63,
    2040: -0.64,
    2060: -0.64,
    2080: -0.65,
    2100: -0.65,
    2120: -0.66,
    2140: -0.66,
    2160: -0.67,
    2180: -0.67,
    2200: -0.68,
    2220: -0.68,
    2240: -0.69,
    2260: -0.69,
    2280: -0.69,
    2300: -0.70,
    2320: -0.70,
    2340: -0.71,
    2360: -0.71,
    2380: -0.71,
    2400: -0.72,
    2420: -0.72,
    2440: -0.73,
    2460: -0.73,
    2480: -0.73,
    2500: -0.74,
    2520: -0.74,
    2540: -0.74,
    2560: -0.75,
    2580: -0.75,
    2600: -0.75,
    2620: -0.76,
    2640: -0.76,
    2660: -0.76,
    2680: -0.77,
    2700: -0.77,
    2720: -0.77,
    2740: -0.77,
    2760: -0.78,
    2780: -0.78,
    2800: -0.78,
    2820: -0.79,
    2840: -0.79,
    2860: -0.79,
    2880: -0.79,
    2900: -0.80,
    2920: -0.80,
    2940: -0.80,
    2960: -0.80,
    2980: -0.81,
    3000: -0.81,
}


def down_scale(value):
    mult_factor = int(value / 20)
    return mult_factor * 20


def map_feature_to_effect(feature: int):
    if not feature:
        return 0
    down_scaled = down_scale(feature)
    return feature_to_effect[down_scaled]


if __name__ == "__main__":
    # TODO: use https://www.desmos.com/calculator to creeate function
    for i in range(150):
        factor = (3 * pow((i / 100) + 1, -3)) - 1
        print(f"{i* 20}: {factor:.2f},")
